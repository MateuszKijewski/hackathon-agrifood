// <auto-generated />
using System;
using Hackathon.AgriFood.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hackathon.AgriFood.DataAccess.Migrations
{
    [DbContext(typeof(AgriFoodDbContext))]
    [Migration("20201205081522_Second-Migration")]
    partial class SecondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Farmer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LocalizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocalizationId");

                    b.ToTable("Farmers");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.FarmerPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FarmerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsProfilePhoto")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FarmerId");

                    b.ToTable("FarmerPhotos");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Localization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<int?>("LocalNumber")
                        .HasColumnType("int");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StreetNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Localizations");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FarmerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MeasureUnit")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Origin")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.Property<Guid?>("ShopId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FarmerId");

                    b.HasIndex("ShopId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.ProductPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsMainPhoto")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPhotos");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Relations.CustomerToFarmer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FarmerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CustomerId", "FarmerId");

                    b.HasIndex("FarmerId");

                    b.ToTable("CustomerToFarmers");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Relations.CustomerToProduct", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CustomerId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("CustomerToProducts");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Relations.CustomerToShop", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShopId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CustomerId", "ShopId");

                    b.HasIndex("ShopId");

                    b.ToTable("CustomerToShops");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Relations.ShopToFarmer", b =>
                {
                    b.Property<Guid>("ShopId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FarmerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ShopId", "FarmerId");

                    b.HasIndex("FarmerId");

                    b.ToTable("ShopToFarmers");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Relations.TagToProduct", b =>
                {
                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TagId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("TagToProducts");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Shop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LocalizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreferredDeliveryMethod")
                        .HasColumnType("int");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocalizationId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.ShopPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBackgroundPhoto")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainPhoto")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShopId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopPhotos");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Farmer", b =>
                {
                    b.HasOne("Hackathon.AgriFood.Models.Models.Localization", "Localization")
                        .WithMany("Farmers")
                        .HasForeignKey("LocalizationId");

                    b.Navigation("Localization");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.FarmerPhoto", b =>
                {
                    b.HasOne("Hackathon.AgriFood.Models.Models.Farmer", "Farmer")
                        .WithMany("Photos")
                        .HasForeignKey("FarmerId");

                    b.Navigation("Farmer");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Product", b =>
                {
                    b.HasOne("Hackathon.AgriFood.Models.Models.Farmer", "Farmer")
                        .WithMany("Products")
                        .HasForeignKey("FarmerId");

                    b.HasOne("Hackathon.AgriFood.Models.Models.Shop", "Shop")
                        .WithMany("Products")
                        .HasForeignKey("ShopId");

                    b.Navigation("Farmer");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.ProductPhoto", b =>
                {
                    b.HasOne("Hackathon.AgriFood.Models.Models.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Relations.CustomerToFarmer", b =>
                {
                    b.HasOne("Hackathon.AgriFood.Models.Models.Farmer", "Farmer")
                        .WithMany("FavoringCustomers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hackathon.AgriFood.Models.Models.Customer", "Customer")
                        .WithMany("FavoriteFarmers")
                        .HasForeignKey("FarmerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Farmer");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Relations.CustomerToProduct", b =>
                {
                    b.HasOne("Hackathon.AgriFood.Models.Models.Product", "Product")
                        .WithMany("FavoringCustomers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hackathon.AgriFood.Models.Models.Customer", "Customer")
                        .WithMany("FavoriteProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Relations.CustomerToShop", b =>
                {
                    b.HasOne("Hackathon.AgriFood.Models.Models.Shop", "Shop")
                        .WithMany("FavoringCustomers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hackathon.AgriFood.Models.Models.Customer", "Customer")
                        .WithMany("FavoriteShops")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Relations.ShopToFarmer", b =>
                {
                    b.HasOne("Hackathon.AgriFood.Models.Models.Farmer", "Farmer")
                        .WithMany("Shops")
                        .HasForeignKey("FarmerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hackathon.AgriFood.Models.Models.Shop", "Shop")
                        .WithMany("Farmers")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farmer");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Relations.TagToProduct", b =>
                {
                    b.HasOne("Hackathon.AgriFood.Models.Models.Product", "Product")
                        .WithMany("Tags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hackathon.AgriFood.Models.Models.Tag", "Tag")
                        .WithMany("TaggedProducts")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Shop", b =>
                {
                    b.HasOne("Hackathon.AgriFood.Models.Models.Localization", "Localization")
                        .WithMany("Shops")
                        .HasForeignKey("LocalizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localization");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.ShopPhoto", b =>
                {
                    b.HasOne("Hackathon.AgriFood.Models.Models.Shop", "Shop")
                        .WithMany("Photos")
                        .HasForeignKey("ShopId");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Customer", b =>
                {
                    b.Navigation("FavoriteFarmers");

                    b.Navigation("FavoriteProducts");

                    b.Navigation("FavoriteShops");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Farmer", b =>
                {
                    b.Navigation("FavoringCustomers");

                    b.Navigation("Photos");

                    b.Navigation("Products");

                    b.Navigation("Shops");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Localization", b =>
                {
                    b.Navigation("Farmers");

                    b.Navigation("Shops");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Product", b =>
                {
                    b.Navigation("FavoringCustomers");

                    b.Navigation("Photos");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Shop", b =>
                {
                    b.Navigation("Farmers");

                    b.Navigation("FavoringCustomers");

                    b.Navigation("Photos");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Hackathon.AgriFood.Models.Models.Tag", b =>
                {
                    b.Navigation("TaggedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
